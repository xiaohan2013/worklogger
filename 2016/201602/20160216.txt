//
TCP/IP协议三次握手与四次握手流程解析
http://www.2cto.com/net/201310/251896.html

  （1）序号：Seq序号，占32位，用来标识从TCP源端向目的端发送的字节流，发起方发送数据时对此进行标记。
  （2）确认序号：Ack序号，占32位，只有ACK标志位为1时，确认序号字段才有效，Ack=Seq+1。
  （3）标志位：共6个，即URG、ACK、PSH、RST、SYN、FIN等，具体含义如下：
  （A）URG：紧急指针（urgent pointer）有效。
  （B）ACK：确认序号有效。
  （C）PSH：接收方应该尽快将这个报文交给应用层。
  （D）RST：重置连接。
  （E）SYN：发起一个新连接。
  （F）FIN：释放一个连接。


  三次握手
  四次挥手




  ----------------
  1、time-grunt：计算每个grunt task的运行时间
  2、load-grunt-tasks；
  require('load-grunt-tasks')(grunt, {
		pattern: 'grunt-contrib-*',
		config: '../package.json',
		scope: 'devDependencies',
		requireResolution: true
  });





  JS按位非(~)运算符与~~运算符的理解分析
  http://www.jb51.net/article/27852.htm
  对于typeof var!==”number”的类型来说，进行运算时，会尝试转化成32位整形数据，如果无法转换成整形数据，就转换为NaN； 





Flip.js源码
https://github.com/nnattawat/flip/blob/master/src/flip.js
旋转插件源码
http://jqueryrotate.com/


//https://davidwalsh.name/
JS检测CSS动画结束
transitionend事件和animationend是标准浏览器的，但是基于webkit需要前缀


function whichTransitionEvent(){
	var t,
		el = document.createElement('fakeelement');

	var transitions = {
		'trasition':'transitionend',
		'OTransition':'oTransitionEnd',
		'MozTransition':'transitionend',
		'WebkitTransition':'webkitTransitionEnd'
	};

	for(t in transitions){
		if( el.style[t] !== undefined){
			return transitionss[t];
		}
	}
}

//监听transition事件
var transitionEvent = whichTransitionEvent();
transitionEvent && e.addEventListener(transitionEvent, function(){
	
	console.log("Transition complete, this is the callback, no library needed")
})
// 一旦animation或者transition结束，就会触发callback



(function($){
	
	var flip = function($dom, callback){

		$dom.data('flipped',true);

		var rotateAxis = "rotate" + $dom.data('axis');
		$dom.find($dom.data('front')).css({
			transform: rotateAxis + ($dom.data("reverse") ? "(-180deg)" : "(180deg)");
			"z-index":"0"
		});

		$dom.find($dom.data("back")).css({
			transform: rotateAxis + "(0deg)",
			"z-index":"1"
		});

		$dom.one(whichTransitioinEvent(), function(){

			$(this).trigger('flip:done');
			if(callback != undefined){
				callback.call(this);
			}

		})

	};

	var unflip = function($dom, callback){

		$dom.data('flipped',false);

		var rotateAxis = "rotate" + $dom.data("axis");
		$dom.find($dom.data("front")).css({
			transform: rotateAxis + ($dom.data("reverse")) ? "(180deg)" : "(-180deg)",
			"z-index":"1"
		});

		$dom.find($dom.data("back")).css({
			transform: rotateAxis + ($dom.data("reverse")) ? "(180deg)" : "(-180deg)",
			"z-index":"0"
		});

		$dom.one(whichTransitionEnd(), function(){
			$(this).trigger("flip:done");
			if(callbck !== undefined){
				callback.call(this);
			}
		})

	}


	$.fn.flip = function(options, callback){
		
		if(typeof options == 'function'){
			callback = options;
		}

		this.each(function(){
			var $dom = $(this);
			
			if(options != undefined && (typeof(options) == "boolean" || typeof(options)=="string")){
				if(options == "toggle"){
					options = !$dom.data("flipped");
				}
				if(options){
					flip($dom,callback);
				}else{
					unflip($dom, callback);
				}
			}else if(!$dom.data("initiated")){
				$dom.data("initiated",true);

				var settings = $.extend({
					axis:"y",
					reverse: false,
					trigger: "click",
					speed: 500,
					forceHeight: false,
					forceWidth: false,
					autoSize: true,
					front:'auto'.
					back:'auto'
				}, options);

				if(settigns.front == "auto"){
					settings.front = ($dom.find(".front").length > 0) ? '.front' : 'div:first-child';
				}else if(settings.front = "autostrict"){
					settings.front = 'div:first-child'
				}

				if(settings.back == 'auto'){
					settings.back = ($dom.find('.back').length > 0) ? '.back' : 'div:first-child + div';
				}else if(settings.back == 'autostrict'){
					settins.back = 'div:first-childe + div'
				}

				$dom.data('reverse', settings.reverse)

			}

		})

	}

	var changeSettings = function(options, callback){
		// 
		var changeNeeded = false;
		if(options.axis !== undefiend && $(this).data('axis') != options.axis.toLowerCase()){
			$(this).data("axis", options.axis.toLowerCase());
			changeNeeded = true;
		}
		if(options.reverse !== undefiend && $(this).data('reverse') != options.reverse){
			$(this).data("reverse", options.reverse);
			changeNeeded = true;
		}

		if(changeNeeded){

			var faces = $(this).find($(this).data("front")).add($(this).data('back'), $(this));
			var savedTrans = faces.css(["transition-property","transition-timing-function","transition-duration","transition-delay"])
			faces.css({
				transition:"none"
			});


			var rotateAxis = "rotate" + $(this).data("axis");
			if($(this).data("flipped")){

				$(this).find($(this).data("front")).css({
					transform:"rotateAxis" + ($(this).data("reverse")) ? "(-180deg)" : "(180deg)"),
					"z-index":"0"
				})

			}else{

				$(this).find($(this).data("back")).css({
					transform: rotateAxis + "(" + ($(this).data("reverse")? "180deg" : "-180deg") + ")",,
					"z-index":"0"
				})

			}

			setTimeout(function(){

				faces.css(savedTrans);
				callbck.call(this);

			}.bind(this),0)


		}else{
			setTimeout(callback.bind(this),0);
		}
	}


}())

http://www.freecodecamp.com/



#freeCodeCamp
网站的结构是webpack来组织代码文件